version: '{build}'
pull_requests:
  do_not_increment_build_number: true
init:
- ps: >-
    # Allow Remote Desktop

    # $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))


    # MSBuild Community Tasks

    # This is only to get unit tests in InstalledCheckProductUnitTests to succeed

    $msiFilePath = "$($env:TEMP)\MSBuild.Community.Tasks.v1.4.0.88.msi"

    $logFilePath = "$($env:TEMP)\MSBuild.Community.Tasks.v1.4.0.88.msi.txt"

    (New-Object Net.WebClient).DownloadFile('https://github.com/loresoft/msbuildtasks/releases/download/1.4.0.88/MSBuild.Community.Tasks.v1.4.0.88.msi', $msiFilePath)

    $process = (Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $msiFilePath /quiet /l*v $logFilePath" -Wait -Passthru)

    $exitCode = $process.ExitCode

    if ($exitCode -ne 0)

    {
      Get-Content $logFilePath
      throw "Command failed with exit code $exitCode."
    }

    del $msiFilePath

    del $logFilePath

    Write-Host "MSBuild Community Tasks v1.4.0.88 installed successfully." -ForegroundColor Green


    # $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
nuget:
  disable_publish_on_pr: true
build_script:
- cmd: build.cmd all /p:Configuration=Release
test: off
artifacts:
- path: target\Release\dotNetInstaller.*.zip
  name: zip
- path: target\Release\dotNetInstaller.*.msi
  name: msi
deploy: off
on_finish:
- ps: >-
    # Allow Remote Desktop

    # $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))